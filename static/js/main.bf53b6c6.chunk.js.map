{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","component","robots","map","user","i","SearchBox","placeholder","type","onChange","onChangeSearch","Scroll","style","overflow","overflowX","border","height","children","App","event","setState","searchField","target","value","state","fetch","then","response","json","users","filterRobot","this","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAACC,GACX,OACG,sBAAKC,UAAU,sDAAf,UACG,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,GAAhC,cACrB,gCACG,mCAAMJ,EAAMK,KAAZ,OACA,4BAAIL,EAAMM,eCSPC,EAdE,SAACP,GACf,IAAMQ,EAAYR,EAAMS,OAAOC,KAAI,SAACC,EAAMC,GACvC,OACG,cAAC,EAAD,CAEGR,GAAIJ,EAAMS,OAAOG,GAAGR,GACpBC,KAAML,EAAMS,OAAOG,GAAGP,KACtBC,MAAON,EAAMS,OAAOG,GAAGN,OAHlBM,MAOd,OAAO,8BAAMJ,KCCDK,EAbG,SAACb,GAChB,OACG,8BACG,uBACGC,UAAU,uCACVa,YAAY,YACZC,KAAK,SACLC,SAAUhB,EAAMiB,oBCQbC,G,MAfA,SAAClB,GACb,OACG,qBACGmB,MAAO,CACJC,SAAU,SACVC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SALd,SAQIvB,EAAMwB,aCsCDC,E,kDA3CZ,aAAe,IAAD,8BACX,gBAaHR,eAAiB,SAACS,GACf,EAAKC,SAAS,CACXC,YAAaF,EAAMG,OAAOC,SAd7B,EAAKC,MAAQ,CACVtB,OAAQ,GACRmB,YAAa,IAJL,E,qDAQd,WAAqB,IAAD,OACjBI,MAAM,8CACFC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAElB,OAAQ2B,S,oBAS/C,WAAU,IAAD,OACAC,EAAcC,KAAKP,MAAMtB,OAAO8B,QAAO,SAACC,GAC3C,OAAOA,EAAMnC,KACToC,cACAC,SAAS,EAAKX,MAAMH,YAAYa,kBAGvC,OAAgC,GAA5BH,KAAKP,MAAMtB,OAAOkC,OACZ,oBAAI1C,UAAU,YAAd,qBAGJ,sBAAKA,UAAU,KAAf,UACG,oBAAIA,UAAU,YAAd,yBACA,cAAC,EAAD,CAAWgB,eAAgBqB,KAAKrB,iBAChC,cAAC,EAAD,UACG,cAAC,EAAD,CAAUR,OAAQ4B,a,GApClBO,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.bf53b6c6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = (props) => {\n   return (\n      <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n         <img alt=\"robots\" src={`https://robohash.org/${props.id}?200x200`} />\n         <div>\n            <h1> {props.name} </h1>\n            <p>{props.email}</p>\n         </div>\n      </div>\n   );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = (props) => {\n   const component = props.robots.map((user, i) => {\n      return (\n         <Card\n            key={i}\n            id={props.robots[i].id}\n            name={props.robots[i].name}\n            email={props.robots[i].email}\n         />\n      );\n   });\n   return <div>{component}</div>;\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = (props) => {\n   return (\n      <div>\n         <input\n            className=\"pa3 ma2 ba b--green bg-lightest-blue\"\n            placeholder=\"Robo name\"\n            type=\"search\"\n            onChange={props.onChangeSearch}\n         ></input>\n      </div>\n   );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n   return (\n      <div\n         style={{\n            overflow: \"scroll\",\n            overflowX: \"hidden\",\n            border: \"1px solid black\",\n            height: \"450px\",\n         }}\n      >\n         {props.children}\n      </div>\n   );\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\nimport CardList from \"../Components/CardList\";\nimport SearchBox from \"../Components/SearchBox\";\nimport \"./App.css\";\nimport Scroll from \"../Components/Scroll\";\n\nclass App extends Component {\n   constructor() {\n      super();\n      this.state = {\n         robots: [],\n         searchField: \"\",\n      };\n   }\n\n   componentDidMount() {\n      fetch(\"https://jsonplaceholder.typicode.com/users\")\n         .then((response) => response.json())\n         .then((users) => this.setState({ robots: users }));\n   }\n\n   onChangeSearch = (event) => {\n      this.setState({\n         searchField: event.target.value,\n      });\n   };\n\n   render() {\n      const filterRobot = this.state.robots.filter((robot) => {\n         return robot.name\n            .toLowerCase()\n            .includes(this.state.searchField.toLowerCase());\n      });\n\n      if (this.state.robots.length == 0) {\n         return <h1 className=\"tc custom\">LOADING</h1>;\n      } else {\n         return (\n            <div className=\"tc\">\n               <h1 className=\"f1 custom\">RoboFriends</h1>\n               <SearchBox onChangeSearch={this.onChangeSearch} />\n               <Scroll>\n                  <CardList robots={filterRobot} />\n               </Scroll>\n            </div>\n         );\n      }\n   }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}